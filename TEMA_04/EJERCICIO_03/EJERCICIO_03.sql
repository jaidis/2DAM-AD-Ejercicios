DROP TABLE TABLA_CLASIFICACION;
DROP TABLE TABLA_EQUIPOS;
DROP TABLE TABLA_ARBITROS;

DROP TYPE TABLA_PARTIDOS;
DROP TYPE TIPO_CLASIFICACION;
DROP TYPE TIPO_PARTIDO;
DROP TYPE TIPO_EQUIPO;
DROP TYPE TIPO_ARBITRO;

COMMIT;

CREATE OR REPLACE TYPE TIPO_ARBITRO AS OBJECT
(
 cCodArb NUMBER(10),
 cNomArb varchar2(100)
);

CREATE OR REPLACE TYPE TIPO_EQUIPO AS OBJECT
(
 cCodEqu NUMBER(10),
 cNomEqu VARCHAR2(50),
 cCiudad VARCHAR2(20),
 cPabellon VARCHAR2(50)
);

CREATE OR REPLACE TYPE TIPO_PARTIDO AS OBJECT
(
 Fecha DATE,
 EquVisit REF TIPO_EQUIPO,
 Arbitro REF TIPO_ARBITRO,
 PtosLocal NUMBER(10),
 PtosVisit NUMBER(10)
);

CREATE OR REPLACE TYPE TABLA_PARTIDOS AS TABLE OF TIPO_PARTIDO;

CREATE OR REPLACE TYPE TIPO_CLASIFICACION AS OBJECT(
 EquLocal REF TIPO_EQUIPO,
 Partidos TABLA_PARTIDOS,
 MEMBER PROCEDURE buscarPartidos (fecha VARCHAR2)
);

CREATE OR REPLACE TYPE BODY TIPO_VENTAS AS
    MEMBER PROCEDURE buscarPartidos (fecha VARCHAR2) IS
        equipoLocal TIPO_EQUIPO;
        equipoVisitante TIPO_EQUIPO;
    BEGIN
        DBMS_OUTPUT.PUT_LINE(fecha);
        FOR i IN 1..Partidos.COUNT LOOP
            IF (Partidos(i).Fecha = TO_DATE(fecha)) THEN
                SELECT DEREF(SELF.EquLocal) INTO equipoLocal FROM DUAL;
                DBMS_OUTPUT.PUT_LINE(equipoLocal.cNomEqu);
                SELECT DEREF(Partidos(i)).EquVisit INTO equipoVisitante FROM DUAL;
                DBMS_OUTPUT.PUT_LINE(equipoVisitante.cNomEqu);
                IF (Partidos(i).PtosLocal > Partidos(i).PtosVisit) THEN
                    DBMS_OUTPUT.PUT_LINE('Gana el Equipo Local');
                ELSE
                     DBMS_OUTPUT.PUT_LINE('Gana el Equipo Visitante');
                END IF;
            END IF;
        END LOOP;
    END;
END;


CREATE TABLE TABLA_ARBITROS OF TIPO_ARBITRO (cCodArb PRIMARY KEY);
CREATE TABLE TABLA_EQUIPOS OF TIPO_EQUIPO (cCodEqu PRIMARY KEY);
CREATE TABLE TABLA_CLASIFICACION OF TIPO_CLASIFICACION NESTED TABLE Partidos STORE AS TIPO_TABLA_PARTIDOS;

INSERT INTO TABLA_CLASIFICACION VALUES ((SELECT REF(E) FROM TABLA_EQUIPOS E WHERE cCodEqu=1), TABLA_PARTIDOS());
INSERT INTO TABLA_CLASIFICACION VALUES ((SELECT REF(E) FROM TABLA_EQUIPOS E WHERE cCodEqu=2), TABLA_PARTIDOS());

INSERT INTO TABLE(
SELECT Partidos FROM TABLA_CLASIFICACION WHERE EquLocal = (SELECT REF(E) FROM TABLA_EQUIPOS E WHERE cCodEqu=1)) 
VALUES (
TIPO_PARTIDO(
'01-01-2019', 
(SELECT REF(E) FROM TABLA_EQUIPOS E WHERE cCodEqu=2),
(SELECT REF(A) FROM TABLA_ARBITROS A WHERE cCodArb=2),
80,
78
)
);

--EN PROCEDIMIENTOS ANONIMOS NO ES POSIBLE ACCEDER A OBJETOS CON EL BUCLE FOR,
--EN CAMBIO SE PUEDE UTILIZAR PARA TABLAS

--FOR I IN (SELECT VALUE(a) FROM TABLA_CLASIFICACION) LOOP
--END LOOP;

--DE TODAS FORMAS ESE BUCLE ES TOTALMENTE FUNCIONAL EN EL TYPE BODY DE UN OBJETO
